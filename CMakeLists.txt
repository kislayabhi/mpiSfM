CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_FORCE_INLINES")
SET(CMAKE_MODULE_PATH ${CMAKE_INSTALL_PREFIX}/lib/cmake/)

PROJECT(mpiSfM)

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#set( BOOST_ROOT "/usr/local/include/boost" )

FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE( MPI REQUIRED )
FIND_PACKAGE( Boost COMPONENTS mpi serialization filesystem REQUIRED)
FIND_PACKAGE( PkgConfig )
PKG_CHECK_MODULES( REQUIRED flann )

INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${MPI_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})


# 3rdparty Libraries
ADD_SUBDIRECTORY(3rdparty/vlfeat_sift)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include ${PROJECT_SOURCE_DIR}/3rdparty)
ADD_SUBDIRECTORY(src/mpiSfM)

ADD_EXECUTABLE(key_demo examples/extract_keypoints.cpp)
TARGET_LINK_LIBRARIES(key_demo mpiSfM ${Boost_LIBRARIES})

ADD_EXECUTABLE(match_demo examples/match_keypoints.cpp)
TARGET_LINK_LIBRARIES(match_demo mpiSfM ${Boost_LIBRARIES})
